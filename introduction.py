# 注册牛客网，LeetCode

# 如果a+b+c = 1000,并且a^2 +b^2 = c^2,求出a,b,c可能的组合
# 解决同一个问题，时间短的算法更好

# # ①
# import time
# start_time = time.time()
# for a in range(0,1001):
#     for b in range(0,1001):
#         for c in range(0,1001):
#             if a+b+c == 1000 and a**2+b**2 == c**2:
#                 print("a,b,c:%d,%d,%d"%(a,b,c))

# end_time = time.time()

# print("运行时间为:%f"%(end_time - start_time))


'''
    a,b,c:0,500,500
    a,b,c:200,375,425
    a,b,c:375,200,425
    a,b,c:500,0,500
    运行时间为:112.079873
'''

# 为了让执行时间更短，优化算法，双重循环
# ②
import time

# 记录开始时间
start_time = time.time()

#因为 c = 1000-a-b
for a in range(0,1001):
	for b in range(0,1001):
		c = 1000 - a -b
		if a**2 + b**2 == c**2:
			print('a,b,c:%d,%d,%d' % (a,b,c))

# 记录结束时间            
end_time = time.time()
# 时间差
print('运行时间为:%d' % (end_time-start_time))

'''
a,b,c:0,500,500
a,b,c:200,375,425
a,b,c:375,200,425
a,b,c:500,0,500
运行时间为:1
'''



'''
1.算法：是独立存在的一种解决问题的方法和思想 
2.五大特性：输入:算法具有0个或多个输入

         输出:算法至少有一个或者多个输出

         有穷性:算法要在有限的步骤之后会自动结束，而不会无限循环，并且每一个步骤可以在可接受的时间内完成。

         确定性:算法的每一个步骤都要有确定的含义，不会出现二义性

         可行性:算法的每一个步骤都是可行的(每一步都能够执行有限的次数完成)

3.算法效率衡量：实现算法程序的执行时间可以反应出算法的效率，单纯依靠运行时间来比较算法 
               的优劣不一定是客观准确的(计算机环境，硬件，操作系统....)
4.最终算法用什么去衡量：时间复杂度  
5.表示法：大O记法  
            O(n^3)
            O(n^2)   
       
'''

# 计算前1000个正整数的和(2种算法) 